// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		107578781CC9B75E00736B2F /* 21. Merge Two Sorted Lists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 107578771CC9B75E00736B2F /* 21. Merge Two Sorted Lists.swift */; };
		1075787C1CCDE5E000736B2F /* 344. Reverse String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1075787B1CCDE5E000736B2F /* 344. Reverse String.swift */; };
		10928F761CBB40750064D5E1 /* 263. Ugly Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10928F751CBB40750064D5E1 /* 263. Ugly Number.swift */; };
		1098CC301CADFE4600F22262 /* 96. Unique Binary Search Trees.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1098CC2F1CADFE4600F22262 /* 96. Unique Binary Search Trees.swift */; };
		1098CC321CB3494A00F22262 /* 230. Kth Smallest Element in a BST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1098CC311CB3494A00F22262 /* 230. Kth Smallest Element in a BST.swift */; };
		1098CC971CB4ACC100F22262 /* 35. Search Insert Position.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1098CC961CB4ACC100F22262 /* 35. Search Insert Position.swift */; };
		1098CCAF1CB7404200F22262 /* 237. Delete Node in a Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1098CCAE1CB7404200F22262 /* 237. Delete Node in a Linked List.cpp */; };
		1098CCB11CB746B900F22262 /* 83. Remove Duplicates from Sorted List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1098CCB01CB746B900F22262 /* 83. Remove Duplicates from Sorted List.swift */; };
		10E4AB511CBCF0FB000793A5 /* 202. Happy Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB501CBCF0FB000793A5 /* 202. Happy Number.swift */; };
		10E4AB531CBDD52A000793A5 /* 231. Power of Two.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB521CBDD52A000793A5 /* 231. Power of Two.swift */; };
		10E4AB551CBF22D6000793A5 /* 326. Power of Three.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB541CBF22D6000793A5 /* 326. Power of Three.swift */; };
		10E4AB571CC26F67000793A5 /* 121. Best Time to Buy and Sell Stock.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB561CC26F67000793A5 /* 121. Best Time to Buy and Sell Stock.swift */; };
		10E4AB5B1CC48D05000793A5 /* 342. Power of Four.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB5A1CC48D05000793A5 /* 342. Power of Four.swift */; };
		10E4AB621CC5DD30000793A5 /* 2. Add Two Numbers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10E4AB611CC5DD30000793A5 /* 2. Add Two Numbers.swift */; };
		10E50E7A1CAA2CC800096BD8 /* 235. Lowest Common Ancestor of a Binary Search Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 10E50E791CAA2CC800096BD8 /* 235. Lowest Common Ancestor of a Binary Search Tree.cpp */; };
		10E50E9B1CAB5EBA00096BD8 /* 191. Number of 1 Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 10E50E9A1CAB5EBA00096BD8 /* 191. Number of 1 Bits.cpp */; };
		10EC8A4B1CACBD0100CE609D /* 137. Single Number II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 10EC8A4A1CACBD0100CE609D /* 137. Single Number II.swift */; };
		120672EB1C9EAA5100D24F63 /* 94. Binary Tree Inorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 120672EA1C9EAA5100D24F63 /* 94. Binary Tree Inorder Traversal.swift */; };
		124781D71CB6AD0000CFD9CC /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 124781D61CB6AD0000CFD9CC /* 108. Convert Sorted Array to Binary Search Tree.swift */; };
		12C2E27C1CAFA13500482FF5 /* 12. Integer to Roman.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12C2E27B1CAFA13500482FF5 /* 12. Integer to Roman.swift */; };
		12C2E27E1CB09CD400482FF5 /* 328. Odd Even Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12C2E27D1CB09CD400482FF5 /* 328. Odd Even Linked List.swift */; };
		12C4D15D1CCD1A4E00D4E80D /* 104. Maximum Depth of Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12C4D15C1CCD1A4E00D4E80D /* 104. Maximum Depth of Binary Tree.swift */; };
		12C4D15F1CCD1A8200D4E80D /* 226. Invert Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12C4D15E1CCD1A8200D4E80D /* 226. Invert Binary Tree.swift */; };
		12C4D1611CCD1AB600D4E80D /* 283. Move Zeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12C4D1601CCD1AB600D4E80D /* 283. Move Zeroes.swift */; };
		12D2654E1CB907280078F28A /* 70. Climbing Stairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12D2654D1CB907280078F28A /* 70. Climbing Stairs.swift */; };
		12EA931B1CA44F0E00E2050D /* 52. N-Queens II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12EA931A1CA44F0E00E2050D /* 52. N-Queens II.swift */; };
		DA38F8B71CA1192800B85482 /* 206. Reverse Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA38F8B61CA1192800B85482 /* 206. Reverse Linked List.swift */; };
		DA77CC301C995D7D00764B3F /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA77CC2F1C995D7D00764B3F /* main.swift */; };
		DA77CC411C995DC100764B3F /* 136. Single Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA77CC3E1C995DC100764B3F /* 136. Single Number.swift */; };
		DA77CC421C995DC100764B3F /* 258. Add Digits.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA77CC3F1C995DC100764B3F /* 258. Add Digits.swift */; };
		DA77CC431C995DC100764B3F /* 292. Nim Game.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA77CC401C995DC100764B3F /* 292. Nim Game.swift */; };
		DA830ED91C9FB1A00073674F /* 318. Maximum Product of Word Lengths.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA830ED81C9FB1A00073674F /* 318. Maximum Product of Word Lengths.swift */; };
		DA882D3D1CA54A3E00F0F181 /* 13. Roman to Integer.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA882D3C1CA54A3E00F0F181 /* 13. Roman to Integer.swift */; };
		DA90CC2A1CA8CAF7004B1988 /* 287. Find the Duplicate Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = DA90CC291CA8CAF7004B1988 /* 287. Find the Duplicate Number.swift */; };
		DAE3B1901CA21F620024B888 /* 338. Counting Bits.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAE3B18F1CA21F620024B888 /* 338. Counting Bits.swift */; };
		DAFA12DB1C9A79320034E3DC /* 122. Best Time to Buy and Sell Stock II.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D11C9A79320034E3DC /* 122. Best Time to Buy and Sell Stock II.swift */; };
		DAFA12DC1C9A79320034E3DC /* 268. Missing Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D21C9A79320034E3DC /* 268. Missing Number.swift */; };
		DAFA12DD1C9A79320034E3DC /* 169. Majority Element.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D31C9A79320034E3DC /* 169. Majority Element.swift */; };
		DAFA12DE1C9A79320034E3DC /* 171. Excel Sheet Column Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D41C9A79320034E3DC /* 171. Excel Sheet Column Number.swift */; };
		DAFA12DF1C9A79320034E3DC /* 144. Binary Tree Preorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D51C9A79320034E3DC /* 144. Binary Tree Preorder Traversal.swift */; };
		DAFA12E01C9A79320034E3DC /* 217. Contains Duplicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D61C9A79320034E3DC /* 217. Contains Duplicate.swift */; };
		DAFA12E11C9A79320034E3DC /* 238. Product of Array Except Self.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D71C9A79320034E3DC /* 238. Product of Array Except Self.swift */; };
		DAFA12E21C9A79320034E3DC /* 260. Single Number III.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D81C9A79320034E3DC /* 260. Single Number III.swift */; };
		DAFA12E31C9A79320034E3DC /* 242. Valid Anagram.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12D91C9A79320034E3DC /* 242. Valid Anagram.swift */; };
		DAFA12E41C9A79320034E3DC /* 319. Bulb Switcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = DAFA12DA1C9A79320034E3DC /* 319. Bulb Switcher.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		DA77CC2A1C995D7D00764B3F /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		107578771CC9B75E00736B2F /* 21. Merge Two Sorted Lists.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "21. Merge Two Sorted Lists.swift"; path = "leetcode-swift-cpp/21. Merge Two Sorted Lists.swift"; sourceTree = SOURCE_ROOT; };
		1075787B1CCDE5E000736B2F /* 344. Reverse String.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "344. Reverse String.swift"; path = "leetcode-swift-cpp/344. Reverse String.swift"; sourceTree = SOURCE_ROOT; };
		10928F751CBB40750064D5E1 /* 263. Ugly Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "263. Ugly Number.swift"; path = "leetcode-swift-cpp/263. Ugly Number.swift"; sourceTree = SOURCE_ROOT; };
		1098CC2F1CADFE4600F22262 /* 96. Unique Binary Search Trees.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "96. Unique Binary Search Trees.swift"; path = "leetcode-swift-cpp/96. Unique Binary Search Trees.swift"; sourceTree = SOURCE_ROOT; };
		1098CC311CB3494A00F22262 /* 230. Kth Smallest Element in a BST.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "230. Kth Smallest Element in a BST.swift"; path = "leetcode-swift-cpp/230. Kth Smallest Element in a BST.swift"; sourceTree = SOURCE_ROOT; };
		1098CC961CB4ACC100F22262 /* 35. Search Insert Position.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "35. Search Insert Position.swift"; path = "leetcode-swift-cpp/35. Search Insert Position.swift"; sourceTree = SOURCE_ROOT; };
		1098CCAE1CB7404200F22262 /* 237. Delete Node in a Linked List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = "237. Delete Node in a Linked List.cpp"; path = "leetcode-swift-cpp/237. Delete Node in a Linked List.cpp"; sourceTree = SOURCE_ROOT; };
		1098CCB01CB746B900F22262 /* 83. Remove Duplicates from Sorted List.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "83. Remove Duplicates from Sorted List.swift"; path = "leetcode-swift-cpp/83. Remove Duplicates from Sorted List.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB501CBCF0FB000793A5 /* 202. Happy Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "202. Happy Number.swift"; path = "leetcode-swift-cpp/202. Happy Number.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB521CBDD52A000793A5 /* 231. Power of Two.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "231. Power of Two.swift"; path = "leetcode-swift-cpp/231. Power of Two.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB541CBF22D6000793A5 /* 326. Power of Three.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "326. Power of Three.swift"; path = "leetcode-swift-cpp/326. Power of Three.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB561CC26F67000793A5 /* 121. Best Time to Buy and Sell Stock.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "121. Best Time to Buy and Sell Stock.swift"; path = "leetcode-swift-cpp/121. Best Time to Buy and Sell Stock.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB5A1CC48D05000793A5 /* 342. Power of Four.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "342. Power of Four.swift"; path = "leetcode-swift-cpp/342. Power of Four.swift"; sourceTree = SOURCE_ROOT; };
		10E4AB611CC5DD30000793A5 /* 2. Add Two Numbers.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "2. Add Two Numbers.swift"; path = "leetcode-swift-cpp/2. Add Two Numbers.swift"; sourceTree = SOURCE_ROOT; };
		10E50E791CAA2CC800096BD8 /* 235. Lowest Common Ancestor of a Binary Search Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = "235. Lowest Common Ancestor of a Binary Search Tree.cpp"; path = "leetcode-swift-cpp/235. Lowest Common Ancestor of a Binary Search Tree.cpp"; sourceTree = SOURCE_ROOT; };
		10E50E9A1CAB5EBA00096BD8 /* 191. Number of 1 Bits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = "191. Number of 1 Bits.cpp"; path = "leetcode-swift-cpp/191. Number of 1 Bits.cpp"; sourceTree = SOURCE_ROOT; };
		10EC8A4A1CACBD0100CE609D /* 137. Single Number II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "137. Single Number II.swift"; path = "leetcode-swift-cpp/137. Single Number II.swift"; sourceTree = SOURCE_ROOT; };
		120672EA1C9EAA5100D24F63 /* 94. Binary Tree Inorder Traversal.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "94. Binary Tree Inorder Traversal.swift"; path = "leetcode-swift-cpp/94. Binary Tree Inorder Traversal.swift"; sourceTree = SOURCE_ROOT; };
		124781D61CB6AD0000CFD9CC /* 108. Convert Sorted Array to Binary Search Tree.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "108. Convert Sorted Array to Binary Search Tree.swift"; path = "leetcode-swift-cpp/108. Convert Sorted Array to Binary Search Tree.swift"; sourceTree = SOURCE_ROOT; };
		12C2E27B1CAFA13500482FF5 /* 12. Integer to Roman.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "12. Integer to Roman.swift"; path = "leetcode-swift-cpp/12. Integer to Roman.swift"; sourceTree = SOURCE_ROOT; };
		12C2E27D1CB09CD400482FF5 /* 328. Odd Even Linked List.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "328. Odd Even Linked List.swift"; path = "leetcode-swift-cpp/328. Odd Even Linked List.swift"; sourceTree = SOURCE_ROOT; };
		12C4D15C1CCD1A4E00D4E80D /* 104. Maximum Depth of Binary Tree.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "104. Maximum Depth of Binary Tree.swift"; path = "leetcode-swift-cpp/104. Maximum Depth of Binary Tree.swift"; sourceTree = SOURCE_ROOT; };
		12C4D15E1CCD1A8200D4E80D /* 226. Invert Binary Tree.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "226. Invert Binary Tree.swift"; path = "leetcode-swift-cpp/226. Invert Binary Tree.swift"; sourceTree = SOURCE_ROOT; };
		12C4D1601CCD1AB600D4E80D /* 283. Move Zeroes.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "283. Move Zeroes.swift"; path = "leetcode-swift-cpp/283. Move Zeroes.swift"; sourceTree = SOURCE_ROOT; };
		12D2654D1CB907280078F28A /* 70. Climbing Stairs.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "70. Climbing Stairs.swift"; path = "leetcode-swift-cpp/70. Climbing Stairs.swift"; sourceTree = SOURCE_ROOT; };
		12EA931A1CA44F0E00E2050D /* 52. N-Queens II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "52. N-Queens II.swift"; path = "leetcode-swift-cpp/52. N-Queens II.swift"; sourceTree = SOURCE_ROOT; };
		DA38F8B61CA1192800B85482 /* 206. Reverse Linked List.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "206. Reverse Linked List.swift"; path = "leetcode-swift-cpp/206. Reverse Linked List.swift"; sourceTree = SOURCE_ROOT; };
		DA77CC2C1C995D7D00764B3F /* leetcode-swift-cpp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "leetcode-swift-cpp"; sourceTree = BUILT_PRODUCTS_DIR; };
		DA77CC2F1C995D7D00764B3F /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		DA77CC3E1C995DC100764B3F /* 136. Single Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "136. Single Number.swift"; path = "leetcode-swift-cpp/136. Single Number.swift"; sourceTree = SOURCE_ROOT; };
		DA77CC3F1C995DC100764B3F /* 258. Add Digits.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "258. Add Digits.swift"; path = "leetcode-swift-cpp/258. Add Digits.swift"; sourceTree = SOURCE_ROOT; };
		DA77CC401C995DC100764B3F /* 292. Nim Game.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "292. Nim Game.swift"; path = "leetcode-swift-cpp/292. Nim Game.swift"; sourceTree = SOURCE_ROOT; };
		DA830ED81C9FB1A00073674F /* 318. Maximum Product of Word Lengths.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "318. Maximum Product of Word Lengths.swift"; path = "leetcode-swift-cpp/318. Maximum Product of Word Lengths.swift"; sourceTree = SOURCE_ROOT; };
		DA882D3C1CA54A3E00F0F181 /* 13. Roman to Integer.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "13. Roman to Integer.swift"; path = "leetcode-swift-cpp/13. Roman to Integer.swift"; sourceTree = SOURCE_ROOT; };
		DA90CC291CA8CAF7004B1988 /* 287. Find the Duplicate Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "287. Find the Duplicate Number.swift"; path = "leetcode-swift-cpp/287. Find the Duplicate Number.swift"; sourceTree = SOURCE_ROOT; };
		DAE3B18F1CA21F620024B888 /* 338. Counting Bits.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "338. Counting Bits.swift"; path = "leetcode-swift-cpp/338. Counting Bits.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D11C9A79320034E3DC /* 122. Best Time to Buy and Sell Stock II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "122. Best Time to Buy and Sell Stock II.swift"; path = "leetcode-swift-cpp/122. Best Time to Buy and Sell Stock II.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D21C9A79320034E3DC /* 268. Missing Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "268. Missing Number.swift"; path = "leetcode-swift-cpp/268. Missing Number.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D31C9A79320034E3DC /* 169. Majority Element.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "169. Majority Element.swift"; path = "leetcode-swift-cpp/169. Majority Element.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D41C9A79320034E3DC /* 171. Excel Sheet Column Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "171. Excel Sheet Column Number.swift"; path = "leetcode-swift-cpp/171. Excel Sheet Column Number.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D51C9A79320034E3DC /* 144. Binary Tree Preorder Traversal.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "144. Binary Tree Preorder Traversal.swift"; path = "leetcode-swift-cpp/144. Binary Tree Preorder Traversal.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D61C9A79320034E3DC /* 217. Contains Duplicate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "217. Contains Duplicate.swift"; path = "leetcode-swift-cpp/217. Contains Duplicate.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D71C9A79320034E3DC /* 238. Product of Array Except Self.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "238. Product of Array Except Self.swift"; path = "leetcode-swift-cpp/238. Product of Array Except Self.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D81C9A79320034E3DC /* 260. Single Number III.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "260. Single Number III.swift"; path = "leetcode-swift-cpp/260. Single Number III.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12D91C9A79320034E3DC /* 242. Valid Anagram.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "242. Valid Anagram.swift"; path = "leetcode-swift-cpp/242. Valid Anagram.swift"; sourceTree = SOURCE_ROOT; };
		DAFA12DA1C9A79320034E3DC /* 319. Bulb Switcher.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "319. Bulb Switcher.swift"; path = "leetcode-swift-cpp/319. Bulb Switcher.swift"; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		DA77CC291C995D7D00764B3F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		DA77CC231C995D7D00764B3F = {
			isa = PBXGroup;
			children = (
				DA77CC2E1C995D7D00764B3F /* leetcode-swift-cpp */,
				DA77CC2D1C995D7D00764B3F /* Products */,
			);
			sourceTree = "<group>";
		};
		DA77CC2D1C995D7D00764B3F /* Products */ = {
			isa = PBXGroup;
			children = (
				DA77CC2C1C995D7D00764B3F /* leetcode-swift-cpp */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		DA77CC2E1C995D7D00764B3F /* leetcode-swift-cpp */ = {
			isa = PBXGroup;
			children = (
				DA77CC3A1C995D9800764B3F /* problems */,
				DA77CC2F1C995D7D00764B3F /* main.swift */,
			);
			path = "leetcode-swift-cpp";
			sourceTree = "<group>";
		};
		DA77CC391C995D9800764B3F /* algorithms */ = {
			isa = PBXGroup;
			children = (
				10928F751CBB40750064D5E1 /* 263. Ugly Number.swift */,
				DA882D3C1CA54A3E00F0F181 /* 13. Roman to Integer.swift */,
				12EA931A1CA44F0E00E2050D /* 52. N-Queens II.swift */,
				120672EA1C9EAA5100D24F63 /* 94. Binary Tree Inorder Traversal.swift */,
				DAFA12D11C9A79320034E3DC /* 122. Best Time to Buy and Sell Stock II.swift */,
				DAFA12D21C9A79320034E3DC /* 268. Missing Number.swift */,
				DAFA12D31C9A79320034E3DC /* 169. Majority Element.swift */,
				DAFA12D41C9A79320034E3DC /* 171. Excel Sheet Column Number.swift */,
				DAFA12D51C9A79320034E3DC /* 144. Binary Tree Preorder Traversal.swift */,
				DAFA12D61C9A79320034E3DC /* 217. Contains Duplicate.swift */,
				DAFA12D71C9A79320034E3DC /* 238. Product of Array Except Self.swift */,
				DAFA12D81C9A79320034E3DC /* 260. Single Number III.swift */,
				DAFA12D91C9A79320034E3DC /* 242. Valid Anagram.swift */,
				DAFA12DA1C9A79320034E3DC /* 319. Bulb Switcher.swift */,
				DA77CC3E1C995DC100764B3F /* 136. Single Number.swift */,
				DA77CC3F1C995DC100764B3F /* 258. Add Digits.swift */,
				DA77CC401C995DC100764B3F /* 292. Nim Game.swift */,
				DA830ED81C9FB1A00073674F /* 318. Maximum Product of Word Lengths.swift */,
				DA38F8B61CA1192800B85482 /* 206. Reverse Linked List.swift */,
				DAE3B18F1CA21F620024B888 /* 338. Counting Bits.swift */,
				DA90CC291CA8CAF7004B1988 /* 287. Find the Duplicate Number.swift */,
				10E50E791CAA2CC800096BD8 /* 235. Lowest Common Ancestor of a Binary Search Tree.cpp */,
				10E50E9A1CAB5EBA00096BD8 /* 191. Number of 1 Bits.cpp */,
				10EC8A4A1CACBD0100CE609D /* 137. Single Number II.swift */,
				1098CC2F1CADFE4600F22262 /* 96. Unique Binary Search Trees.swift */,
				12C2E27B1CAFA13500482FF5 /* 12. Integer to Roman.swift */,
				12C2E27D1CB09CD400482FF5 /* 328. Odd Even Linked List.swift */,
				1098CC311CB3494A00F22262 /* 230. Kth Smallest Element in a BST.swift */,
				1098CC961CB4ACC100F22262 /* 35. Search Insert Position.swift */,
				124781D61CB6AD0000CFD9CC /* 108. Convert Sorted Array to Binary Search Tree.swift */,
				1098CCAE1CB7404200F22262 /* 237. Delete Node in a Linked List.cpp */,
				1098CCB01CB746B900F22262 /* 83. Remove Duplicates from Sorted List.swift */,
				12D2654D1CB907280078F28A /* 70. Climbing Stairs.swift */,
				10E4AB501CBCF0FB000793A5 /* 202. Happy Number.swift */,
				10E4AB521CBDD52A000793A5 /* 231. Power of Two.swift */,
				10E4AB541CBF22D6000793A5 /* 326. Power of Three.swift */,
				10E4AB561CC26F67000793A5 /* 121. Best Time to Buy and Sell Stock.swift */,
				10E4AB5A1CC48D05000793A5 /* 342. Power of Four.swift */,
				10E4AB611CC5DD30000793A5 /* 2. Add Two Numbers.swift */,
				107578771CC9B75E00736B2F /* 21. Merge Two Sorted Lists.swift */,
				12C4D15C1CCD1A4E00D4E80D /* 104. Maximum Depth of Binary Tree.swift */,
				12C4D15E1CCD1A8200D4E80D /* 226. Invert Binary Tree.swift */,
				12C4D1601CCD1AB600D4E80D /* 283. Move Zeroes.swift */,
				1075787B1CCDE5E000736B2F /* 344. Reverse String.swift */,
			);
			name = algorithms;
			sourceTree = "<group>";
		};
		DA77CC3A1C995D9800764B3F /* problems */ = {
			isa = PBXGroup;
			children = (
				DA77CC391C995D9800764B3F /* algorithms */,
			);
			name = problems;
			path = "../../leetcode-swift+cpp/leetcode-swift+cpp";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		DA77CC2B1C995D7D00764B3F /* leetcode-swift-cpp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DA77CC331C995D7D00764B3F /* Build configuration list for PBXNativeTarget "leetcode-swift-cpp" */;
			buildPhases = (
				DA77CC281C995D7D00764B3F /* Sources */,
				DA77CC291C995D7D00764B3F /* Frameworks */,
				DA77CC2A1C995D7D00764B3F /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "leetcode-swift-cpp";
			productName = "leetcode-swift-cpp";
			productReference = DA77CC2C1C995D7D00764B3F /* leetcode-swift-cpp */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		DA77CC241C995D7D00764B3F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0720;
				LastUpgradeCheck = 0720;
				ORGANIZATIONNAME = eyrefree;
				TargetAttributes = {
					DA77CC2B1C995D7D00764B3F = {
						CreatedOnToolsVersion = 7.2.1;
					};
				};
			};
			buildConfigurationList = DA77CC271C995D7D00764B3F /* Build configuration list for PBXProject "leetcode-swift-cpp" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = DA77CC231C995D7D00764B3F;
			productRefGroup = DA77CC2D1C995D7D00764B3F /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				DA77CC2B1C995D7D00764B3F /* leetcode-swift-cpp */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		DA77CC281C995D7D00764B3F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				107578781CC9B75E00736B2F /* 21. Merge Two Sorted Lists.swift in Sources */,
				DAFA12E41C9A79320034E3DC /* 319. Bulb Switcher.swift in Sources */,
				DAFA12E01C9A79320034E3DC /* 217. Contains Duplicate.swift in Sources */,
				124781D71CB6AD0000CFD9CC /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */,
				DAFA12E31C9A79320034E3DC /* 242. Valid Anagram.swift in Sources */,
				DA77CC411C995DC100764B3F /* 136. Single Number.swift in Sources */,
				10EC8A4B1CACBD0100CE609D /* 137. Single Number II.swift in Sources */,
				DA830ED91C9FB1A00073674F /* 318. Maximum Product of Word Lengths.swift in Sources */,
				1098CC971CB4ACC100F22262 /* 35. Search Insert Position.swift in Sources */,
				DA882D3D1CA54A3E00F0F181 /* 13. Roman to Integer.swift in Sources */,
				12C4D15D1CCD1A4E00D4E80D /* 104. Maximum Depth of Binary Tree.swift in Sources */,
				12C4D1611CCD1AB600D4E80D /* 283. Move Zeroes.swift in Sources */,
				10E50E9B1CAB5EBA00096BD8 /* 191. Number of 1 Bits.cpp in Sources */,
				DA77CC421C995DC100764B3F /* 258. Add Digits.swift in Sources */,
				1098CCAF1CB7404200F22262 /* 237. Delete Node in a Linked List.cpp in Sources */,
				DAFA12DD1C9A79320034E3DC /* 169. Majority Element.swift in Sources */,
				DA77CC301C995D7D00764B3F /* main.swift in Sources */,
				DAFA12DC1C9A79320034E3DC /* 268. Missing Number.swift in Sources */,
				1098CC301CADFE4600F22262 /* 96. Unique Binary Search Trees.swift in Sources */,
				10928F761CBB40750064D5E1 /* 263. Ugly Number.swift in Sources */,
				1075787C1CCDE5E000736B2F /* 344. Reverse String.swift in Sources */,
				DAFA12DB1C9A79320034E3DC /* 122. Best Time to Buy and Sell Stock II.swift in Sources */,
				10E4AB621CC5DD30000793A5 /* 2. Add Two Numbers.swift in Sources */,
				12EA931B1CA44F0E00E2050D /* 52. N-Queens II.swift in Sources */,
				DAFA12DF1C9A79320034E3DC /* 144. Binary Tree Preorder Traversal.swift in Sources */,
				DA90CC2A1CA8CAF7004B1988 /* 287. Find the Duplicate Number.swift in Sources */,
				120672EB1C9EAA5100D24F63 /* 94. Binary Tree Inorder Traversal.swift in Sources */,
				DA77CC431C995DC100764B3F /* 292. Nim Game.swift in Sources */,
				10E4AB511CBCF0FB000793A5 /* 202. Happy Number.swift in Sources */,
				DAFA12DE1C9A79320034E3DC /* 171. Excel Sheet Column Number.swift in Sources */,
				12D2654E1CB907280078F28A /* 70. Climbing Stairs.swift in Sources */,
				DAFA12E11C9A79320034E3DC /* 238. Product of Array Except Self.swift in Sources */,
				1098CC321CB3494A00F22262 /* 230. Kth Smallest Element in a BST.swift in Sources */,
				10E4AB571CC26F67000793A5 /* 121. Best Time to Buy and Sell Stock.swift in Sources */,
				DAFA12E21C9A79320034E3DC /* 260. Single Number III.swift in Sources */,
				12C4D15F1CCD1A8200D4E80D /* 226. Invert Binary Tree.swift in Sources */,
				12C2E27C1CAFA13500482FF5 /* 12. Integer to Roman.swift in Sources */,
				DAE3B1901CA21F620024B888 /* 338. Counting Bits.swift in Sources */,
				DA38F8B71CA1192800B85482 /* 206. Reverse Linked List.swift in Sources */,
				10E4AB5B1CC48D05000793A5 /* 342. Power of Four.swift in Sources */,
				1098CCB11CB746B900F22262 /* 83. Remove Duplicates from Sorted List.swift in Sources */,
				12C2E27E1CB09CD400482FF5 /* 328. Odd Even Linked List.swift in Sources */,
				10E4AB531CBDD52A000793A5 /* 231. Power of Two.swift in Sources */,
				10E4AB551CBF22D6000793A5 /* 326. Power of Three.swift in Sources */,
				10E50E7A1CAA2CC800096BD8 /* 235. Lowest Common Ancestor of a Binary Search Tree.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		DA77CC311C995D7D00764B3F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		DA77CC321C995D7D00764B3F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
			};
			name = Release;
		};
		DA77CC341C995D7D00764B3F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		DA77CC351C995D7D00764B3F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		DA77CC271C995D7D00764B3F /* Build configuration list for PBXProject "leetcode-swift-cpp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DA77CC311C995D7D00764B3F /* Debug */,
				DA77CC321C995D7D00764B3F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DA77CC331C995D7D00764B3F /* Build configuration list for PBXNativeTarget "leetcode-swift-cpp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DA77CC341C995D7D00764B3F /* Debug */,
				DA77CC351C995D7D00764B3F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = DA77CC241C995D7D00764B3F /* Project object */;
}
